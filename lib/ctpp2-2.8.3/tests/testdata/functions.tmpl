// Start

AVG(a):                      <TMPL_var AVG('a', 1, 2, 3)>
AVG(g):                      <TMPL_var AVG('g', 1, 2, 3)>
AVG(h):                      <TMPL_var AVG('h', 1, 2, 3)>
AVG(q):                      <TMPL_var AVG('q', 1, 2, 3)>

BASE64_DECODE/BASE64_ENCODE: <TMPL_var BASE64_DECODE(BASE64_ENCODE("Hello, World"))>

CAST(int):                   <TMPL_var CAST('int', 1.345)>
CAST(int):                   <TMPL_var CAST('int', "010")>
CAST(dec):                   <TMPL_var CAST('dec', "010")>
CAST(oct):                   <TMPL_var CAST('oct', "010")>
CAST(hex):                   <TMPL_var CAST('hex', "010")>
CAST(float):                 <TMPL_var CAST('float', 1.234)>

CONCAT:                      <TMPL_var CONCAT("Hello", "World!")>

DATE_FORMAT:                 <TMPL_var DATE_FORMAT(1200490323, "%Y-%m-%d %H:%M:%S")>

DEFAULT:                     <TMPL_var DEFAULT(nonexistent, "Default value")>

DEFINED(nonexistent):        <TMPL_var DEFINED(nonexistent)>
DEFINED             :        <TMPL_var DEFINED(array_int)>

FORM_PARAM:                  <TMPL_var FORM_PARAM("param", string)>

GET_TYPE:                    <TMPL_var GET_TYPE(1)>
GET_TYPE:                    <TMPL_var GET_TYPE(3.141)>
GET_TYPE:                    <TMPL_var GET_TYPE("foo")>
GET_TYPE:                    <TMPL_var GET_TYPE(array_int)>

HASH_KEYS:                   <TMPL_foreach HASH_KEYS(hash) as key> <TMPL_var key></TMPL_foreach> | <TMPL_foreach HASH_KEYS(hash) as iter> <TMPL_var iter></TMPL_foreach>

HREF_PARAM:                  <TMPL_var HREF_PARAM("hello", string2.to.escape)>

IN_ARRAY:                    <TMPL_var IN_ARRAY(2, array_int)>

IN_SET:                      <TMPL_var IN_SET(2, 1, "2", 3, 4)>

LIST:                        <TMPL_foreach LIST("cat", "dog", "bat", "rat") as lst><TMPL_var lst> </TMPL_foreach>
LIST_ELEMENT:                <TMPL_var LIST_ELEMENT(2, 1, "2", 3, 4)>

LOG:                         <TMPL_var LOG(101, 10)>
LOG:                         <TMPL_var LOG("101", "10")>
LOG:                         <TMPL_var LOG(1024, 2)>
LOG:                         <TMPL_var LOG(2.71828182846)>

MB_SIZE:                     <TMPL_var MB_SIZE("Hello, World!\nПривет, мир!")>

MB_SUBSTR:                   <TMPL_var MB_SUBSTR("Hello, World! Привет, мир!", 14)>
MB_SUBSTR:                   <TMPL_var MB_SUBSTR("Hello, World! Привет, мир!", 7, 13)>
MB_SUBSTR:                   <TMPL_var MB_SUBSTR("Hello, World! Привет, мир!", 7, 14, ':)')>

MB_TRUNCATE:                 <TMPL_var MB_TRUNCATE("Hello, World! Привет, мир!", 12)>
MB_TRUNCATE:                 <TMPL_var MB_TRUNCATE("Hello, World! Привет, мир!", 12, '...')>

MIN:                         <TMPL_var MIN(1, 3)>

MAX:                         <TMPL_var MAX(1, 3)>

NUM_FORMAT:                  <TMPL_var NUM_FORMAT(1234567890, ' ')>

SIZE:                        <TMPL_var SIZE(array_int)>
SIZE:                        <TMPL_var SIZE(hash)>

SPRINTF:                     <TMPL_var SPRINTF("%d %d", neg_float, array_int)>

SUBSTR:                      <TMPL_var SUBSTR("Hello, World!\nПривет, мир!", 7, 5)>

TRUNCATE:                    <TMPL_var TRUNCATE("Hello, World!\nПривет, мир!", 5)>
TRUNCATE:                    <TMPL_var TRUNCATE("Hello, World!\nПривет, мир!", 5, '...')>

VERSION      :               <TMPL_var VERSION()>
VERSION(full):               <TMPL_var VERSION('full')>

// Escape
HTMLESCAPE:                  <TMPL_var HTMLESCAPE(string2.to.escape)>

JSON:                        <TMPL_var JSON(string2.to.escape)>

JSONESCAPE:                  <TMPL_var JSONESCAPE(string2.to.escape)>

URLESCAPE:                   <TMPL_var URLESCAPE(string2.to.escape)>

URIESCAPE:                   <TMPL_var URIESCAPE(string2.to.escape)>

XMLESCAPE:                   <TMPL_var XMLESCAPE(string2.to.escape)>

WMLESCAPE:                   <TMPL_var WMLESCAPE(string2.to.escape)>

// End.
